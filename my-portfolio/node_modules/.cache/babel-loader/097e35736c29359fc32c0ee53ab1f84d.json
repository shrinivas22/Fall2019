{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar prefix = _carbonComponents.settings.prefix;\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\n\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return /*#__PURE__*/_react.default.createElement(\"footer\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? /*#__PURE__*/_react.default.createElement(_iconsReact.Close20, null) : /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronRight20, null)), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: _propTypes.default.string.isRequired,\n  className: _propTypes.default.string,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: _propTypes.default.bool.isRequired,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: _propTypes.default.bool,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: _propTypes.default.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nvar _default = SideNavFooter;\nexports.default = _default;","map":{"version":3,"sources":["E:/fall2019git/my-portfolio/node_modules/carbon-components-react/lib/components/UIShell/SideNavFooter.js"],"names":["Object","defineProperty","exports","value","default","_iconsReact","require","_carbonComponents","_classnames","_interopRequireDefault","_react","_propTypes","obj","__esModule","prefix","settings","SideNavFooter","_ref","assistiveText","customClassName","className","expanded","onToggle","concat","createElement","type","onClick","evt","title","Close20","ChevronRight20","propTypes","string","isRequired","bool","isSideNavExpanded","func","defaultProps","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AAEA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,IAAIE,WAAW,GAAGC,sBAAsB,CAACH,OAAO,CAAC,YAAD,CAAR,CAAxC;;AAEA,IAAII,MAAM,GAAGD,sBAAsB,CAACH,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIK,UAAU,GAAGF,sBAAsB,CAACH,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,SAASG,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;AAE/F;;;;;;;;AAMA,IAAIE,MAAM,GAAGP,iBAAiB,CAACQ,QAAlB,CAA2BD,MAAxC;AACA;;;;;;AAMA,IAAIE,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AAAA,MACIC,eAAe,GAAGF,IAAI,CAACG,SAD3B;AAAA,MAEIC,QAAQ,GAAGJ,IAAI,CAACI,QAFpB;AAAA,MAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;AAIA,MAAIF,SAAS,GAAG,CAAC,GAAGZ,WAAW,CAACJ,OAAhB,EAAyB,GAAGmB,MAAH,CAAUT,MAAV,EAAkB,oBAAlB,CAAzB,EAAkEK,eAAlE,CAAhB;AACA,SAAO,aAAaT,MAAM,CAACN,OAAP,CAAeoB,aAAf,CAA6B,QAA7B,EAAuC;AACzDJ,IAAAA,SAAS,EAAEA;AAD8C,GAAvC,EAEjB,aAAaV,MAAM,CAACN,OAAP,CAAeoB,aAAf,CAA6B,QAA7B,EAAuC;AACrDJ,IAAAA,SAAS,EAAE,GAAGG,MAAH,CAAUT,MAAV,EAAkB,oBAAlB,CAD0C;AAErDW,IAAAA,IAAI,EAAE,QAF+C;AAGrDC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC7B,aAAOL,QAAQ,CAACK,GAAD,CAAf;AACD,KALoD;AAMrDC,IAAAA,KAAK,EAAEV;AAN8C,GAAvC,EAOb,aAAaR,MAAM,CAACN,OAAP,CAAeoB,aAAf,CAA6B,KAA7B,EAAoC;AAClDJ,IAAAA,SAAS,EAAE,GAAGG,MAAH,CAAUT,MAAV,EAAkB,kBAAlB;AADuC,GAApC,EAEbO,QAAQ,GAAG,aAAaX,MAAM,CAACN,OAAP,CAAeoB,aAAf,CAA6BnB,WAAW,CAACwB,OAAzC,EAAkD,IAAlD,CAAhB,GAA0E,aAAanB,MAAM,CAACN,OAAP,CAAeoB,aAAf,CAA6BnB,WAAW,CAACyB,cAAzC,EAAyD,IAAzD,CAFlF,CAPA,EASmJ,aAAapB,MAAM,CAACN,OAAP,CAAeoB,aAAf,CAA6B,MAA7B,EAAqC;AACnNJ,IAAAA,SAAS,EAAE,GAAGG,MAAH,CAAUT,MAAV,EAAkB,kBAAlB;AADwM,GAArC,EAE7KI,aAF6K,CAThK,CAFI,CAApB;AAcD,CApBD;;AAsBAF,aAAa,CAACe,SAAd,GAA0B;AACxB;;;;AAIAb,EAAAA,aAAa,EAAEP,UAAU,CAACP,OAAX,CAAmB4B,MAAnB,CAA0BC,UALjB;AAMxBb,EAAAA,SAAS,EAAET,UAAU,CAACP,OAAX,CAAmB4B,MANN;;AAQxB;;;AAGAX,EAAAA,QAAQ,EAAEV,UAAU,CAACP,OAAX,CAAmB8B,IAAnB,CAAwBD,UAXV;;AAaxB;;;;AAIAE,EAAAA,iBAAiB,EAAExB,UAAU,CAACP,OAAX,CAAmB8B,IAjBd;;AAmBxB;;;;AAIAZ,EAAAA,QAAQ,EAAEX,UAAU,CAACP,OAAX,CAAmBgC,IAAnB,CAAwBH;AAvBV,CAA1B;AAyBAjB,aAAa,CAACqB,YAAd,GAA6B;AAC3BnB,EAAAA,aAAa,EAAE;AADY,CAA7B;AAGA,IAAIoB,QAAQ,GAAGtB,aAAf;AACAd,OAAO,CAACE,OAAR,GAAkBkC,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar prefix = _carbonComponents.settings.prefix;\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\n\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return /*#__PURE__*/_react.default.createElement(\"footer\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? /*#__PURE__*/_react.default.createElement(_iconsReact.Close20, null) : /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronRight20, null)), /*#__PURE__*/_react.default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: _propTypes.default.string.isRequired,\n  className: _propTypes.default.string,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: _propTypes.default.bool.isRequired,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: _propTypes.default.bool,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: _propTypes.default.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nvar _default = SideNavFooter;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}