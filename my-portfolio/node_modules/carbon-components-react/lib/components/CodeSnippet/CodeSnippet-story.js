"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.playground = exports.skeleton = exports.singleline = exports.multiline = exports.inline = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _addonActions = require("@storybook/addon-actions");

var _addonKnobs = require("@storybook/addon-knobs");

var _CodeSnippet = _interopRequireDefault(require("../CodeSnippet"));

var _CodeSnippet2 = _interopRequireDefault(require("./CodeSnippet.Skeleton"));

var _CodeSnippet3 = _interopRequireDefault(require("./CodeSnippet.mdx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var _default = {
  title: 'CodeSnippet',
  component: _CodeSnippet.default,
  decorators: [_addonKnobs.withKnobs],
  parameters: {
    docs: {
      page: _CodeSnippet3.default
    }
  }
};
exports.default = _default;

var inline = function inline() {
  return /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, {
    type: "inline",
    feedback: "Copied to clipboard"
  }, 'node -v');
};

exports.inline = inline;

var multiline = function multiline() {
  return /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, {
    type: "multi",
    feedback: "Copied to clipboard"
  }, "@mixin grid-container {\n     width: 100%;\n     padding-right: padding(mobile);\n     padding-left: padding(mobile);");
};

exports.multiline = multiline;

var singleline = function singleline() {
  return /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, {
    type: "single",
    feedback: "Copied to clipboard"
  }, 'node -v');
};

exports.singleline = singleline;

var skeleton = function skeleton() {
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width: '800px'
    }
  }, /*#__PURE__*/_react.default.createElement(_CodeSnippet2.default, {
    type: "single",
    style: {
      marginBottom: 8
    }
  }), /*#__PURE__*/_react.default.createElement(_CodeSnippet2.default, {
    type: "multi"
  }));
};

exports.skeleton = skeleton;

var lightPropMessage = /*#__PURE__*/_react.default.createElement("small", {
  style: {
    display: 'block',
    paddingBottom: '1rem'
  }
}, "The snippet container should never be the same color as the page background.", /*#__PURE__*/_react.default.createElement("br", null), 'Do not use the ', /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, {
  type: "inline",
  light: true
}, "light"), ' variant on ', /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, {
  type: "inline",
  light: true
}, "$ui-background"), ' or ', /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, {
  type: "inline",
  light: true
}, "$ui-02"), ".");

var props = function props() {
  return {
    type: (0, _addonKnobs.select)('Type', {
      inline: 'inline',
      'single line': 'single',
      'multiple line': 'multi'
    }),
    light: (0, _addonKnobs.boolean)('Light variant', false),
    feedback: (0, _addonKnobs.text)('Feedback text', 'Copied to clipboard'),
    showMoreText: (0, _addonKnobs.text)('Text for "show more" button', 'Show more'),
    showLessText: (0, _addonKnobs.text)('Text for "show less" button', 'Show less'),
    hideCopyButton: (0, _addonKnobs.boolean)('Hide copy button', false),
    onClick: (0, _addonActions.action)('onClick'),
    copyButtonDescription: (0, _addonKnobs.text)('Copy button title', 'Copy code snippet'),
    ariaLabel: (0, _addonKnobs.text)('ARIA label', 'Container label')
  };
};

var playground = function playground() {
  return /*#__PURE__*/_react.default.createElement("div", {
    className: props().light ? 'bx--tile' : '',
    style: {
      width: '800px'
    }
  }, props().light && lightPropMessage, /*#__PURE__*/_react.default.createElement(_CodeSnippet.default, props(), props().type === 'multi' ? "@mixin grid-container {\n  width: 100%;\n  padding-right: padding(mobile);\n  padding-left: padding(mobile);\n}" : 'node -v'));
};

exports.playground = playground;